#!/bin/bash
DOTFILES_DIR=$HOME/dotfiles

# set up homebrew
brew > /dev/null 2>&1
if [ $? -eq 127 ]
  then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew update && brew cleanup && brew cask cleanup
fi

# Install cask
brew tap caskroom/cask
brew upgrade brew-cask

# https://github.com/Homebrew/homebrew-completions
brew_install bash-completion
brew tap homebrew/completions

function brew_install {
  if [[ $(brew list | grep $1) == 1 ]]; then
      brew install $1
  fi
}


# ?
brew tap caskroom/versions
brew tap homebrew/boneyard
brew tap caskroom/fonts

# Git
GIT_DIR=$DOTFILES_DIR/git
ln -sf $GIT_DIR/gitignore $HOME/.gitignore
ln -sf $GIT_DIR/gitconfig $HOME/.gitconfig
ln -sf $GIT_DIR/git-completion.bash $HOME/.git-completion.bash
ln -sf $GIT_DIR/hub-completion.bash $HOME/.hub-completion.bash

brew_install hub
if [ ! -d $HOME/.config ]; then
  mkdir $HOME/.config
fi
ln -sf $GIT_DIR/hub-config $HOME/.config/hub

git config --global hub.protocol https

# Bash
BASH_DIR=$DOTFILES_DIR/bash
ln -sf $BASH_DIR/bashrc $HOME/.bashrc
ln -sf $BASH_DIR/bashrc $HOME/.bash_profile

# terminal
brew cask install iterm2
source $HOME/.bashrc

# Vim
VIM_DIR=$HOME/.vim
if [ ! -d $VIM_DIR ]; then
    mkdir $VIM_DIR
fi
(cd $VIM_DIR && git status > /dev/null 2>&1)
if [ $? -eq 128 ]; then
    echo "cloning vimconfig"
    git clone vimconfig $VIM_DIR
    (cd $VIM_DIR && git submodule update --init)
fi
ln -sf $VIM_DIR/vimrc-english $HOME/.vimrc


function pip_install {
  if [[ $(pip show $1) == 1 ]]; then
      pip install $1
  fi
}
pip_install powerline-status

# python
brew_install readline  --universal
brew_install python --readline --framework
brew_install python3 --readline --framework
pip install --upgrade pip
pip install --upgrade pip3
pip_install virtualenv
pip_install virtualenvwrapper
pip_install pip-tools

# python dev environment
pip_install cookiecutter
COOKIECUTTER_DIR=$HOME/.cookicutters
mkdir $COOKIECUTTER_DIR
git clone https://github.com/shaunokeefe/python_cli_cookiecutter.git $COOKIECUTTER_DIR/python_cli

# OSX defaults

# Function keys are standard function keys
defaults write -g com.apple.keyboard.fnState -bool true

# Use AirDrop over every interface. srsly this should be a default.
defaults write com.apple.NetworkBrowser BrowseAllInterfaces 1

# Always open everything in Finder's list view. This is important.
defaults write com.apple.Finder FXPreferredViewStyle Nlsv

# Show the ~/Library folder.
chflags nohidden ~/Library

# Set a really fast key repeat.
defaults write NSGlobalDomain KeyRepeat -int 0

# Set the Finder prefs for showing a few different volumes on the Desktop.
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# don't automatically re-arrange mission control panes
defaults write com.apple.dock mru-spaces -bool false

function cask_install {
    brew cask list | grep $1 > /dev/null 2>&1
    if [ $? -eq 1 ]; then
      echo TEST_inner "$1"
      brew cask install $1
  fi
}
# apps from cask
brew cask install slack
brew cask install dropbox
brew cask install skype
brew cask install evernote
cask_install atom

# iterm2
cask_install iterm2
#defaults write com.apple.dock persistent-apps -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/iTerm</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>"

#iterm profiles
if [ ! -f /tmp/SolarizedDark.itermcolors ]; then
  curl -L https://raw.githubusercontent.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Dark.itermcolors -o /tmp/SolarizedDark.itermcolors
fi

if [ ! -f /tmp/SolarizedLight.itermcolors ]; then
  curl -L https://raw.githubusercontent.com/altercation/solarized/master/iterm2-colors-solarized/Solarized%20Light.itermcolors -o /tmp/SolarizedLight.itermcolors
fi

# iterm fonts
if ! [[ $(ls /Users/shaunokeefe/Library/Fonts/ | grep "Meslo LG L DZ Regular for Powerline.otf" >/dev/null 2>&1) ]]; then
  git clone https://github.com/powerline/fonts.git /tmp/fonts && cd /tmp/fonts && ./install.sh
fi


# ssh config
mkdir -p $HOME/.ssh/
ln -sf $HOME/Dropbox/config $HOME/.ssh/config

# node/npm
if [ $(command -v nvm | grep nvm) ]; then
  brew_install nvm
  export NVM_DIR=~/.nvm
  source $(brew --prefix nvm)/nvm.sh
fi

if ! nvm list | grep -q "v8\.9\.4"; then
  nvm install v8.9.4
  nvm alias default v8.9.4
fi

npm install -g npm@latest

# Ruby
brew_install rbenv

# sublimetext
cask_install sublime-text

# terraform
brew_install terraform

# docker
cask_install docker-toolbox
brew_install docker-completion
brew_install docker-compose-completion

# kubernetes
brew_install kubectl
curl -Lo /tmp/minikube https://storage.googleapis.com/minikube/releases/v0.14.0/minikube-darwin-amd64 && chmod +x /tmp/minikube && sudo mv /tmp/minikube /usr/local/bin/

